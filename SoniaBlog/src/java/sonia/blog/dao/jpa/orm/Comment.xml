<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="1.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd">
  <persistence-unit-metadata>
    <persistence-unit-defaults>
      <access>FIELD</access>
    </persistence-unit-defaults>
  </persistence-unit-metadata>
  <package>sonia.blog.entity</package>
  <entity metadata-complete="true" name="Comment" class="sonia.blog.entity.Comment">
    <!--
    @NamedQueries(
    {
      @NamedQuery(name = "Comment.findAll", query = "select c from Comment c") ,
      @NamedQuery(name = "Comment.findAllByBlog",
                  query = "select c from Comment c join c.entry e join e.category ca join ca.blog b where b = :blog and e.published = true order by c.creationDate desc") ,
      @NamedQuery(name = "Comment.findAllActivesByEntry",
                  query = "select c from Comment c join c.entry e where e = :entry and c.spam = false order by c.creationDate") ,
      @NamedQuery(name = "Comment.count",
                  query = "select count(c) from Comment c") ,
      @NamedQuery(name = "Comment.countByBlog",
                  query = "select count(c) from Comment c join c.entry e join e.category cat join cat.blog b where b = :blog")
    })
    -->
    <named-query name="Comment.findAll">
      <query>
        select c from Comment c
      </query>
    </named-query>
    <named-query name="Comment.findAllByBlog">
      <query>
        select c from Comment c join c.entry e join e.category ca join ca.blog b where b = :blog and e.published = true order by c.creationDate desc
      </query>
    </named-query>
    <named-query name="Comment.findAllActivesByEntry">
      <query>
        select c from Comment c join c.entry e where e = :entry and c.spam = false order by c.creationDate
      </query>
    </named-query>
    <named-query name="Comment.count">
      <query>
        select count(c) from Comment c
      </query>
    </named-query>
    <named-query name="Comment.countByBlog">
      <query>
        select count(c) from Comment c join c.entry e join e.category cat join cat.blog b where b = :blog
      </query>
    </named-query>
    <entity-listeners>
      <entity-listener class="sonia.blog.api.listener.CommentListener">
        <pre-persist method-name="prePersists" />
        <post-persist method-name="postPersists" />
        <pre-remove method-name="preRemove" />
        <post-remove method-name="postRemove" />
        <pre-update method-name="preUpdate" />
        <post-update method-name="postUpdate" />
        <post-load method-name="postLoad" />
      </entity-listener>
    </entity-listeners>
    <pre-persist method-name="prePersists" />
    <attributes>
      <id name="id">
        <generated-value strategy="IDENTITY" />
      </id>
      <basic name="authorName">
        <column nullable="false" />
      </basic>
      <basic name="content">
        <column nullable="false" length="2048" />
      </basic>
      <basic name="creationDate">
        <column nullable="false" />
        <temporal>TIMESTAMP</temporal>
      </basic>
    </attributes>
  </entity>
</entity-mappings>
